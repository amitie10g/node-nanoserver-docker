name: Docker Image CI

on:
  workflow_dispatch:
  schedule: 
   - cron: '0 12 * 1/3 0'

env:
  BASE_URL: "https://nodejs.org/dist"
  VERSION_PATTERN: "node-v(\\d+\\.\\d+\\.\\d+)"
  FIRST_VERSION: 4
  LATEST_VERSION: 23
  NODE_VERSIONS_ELEMENTS: >-
    argon
    boron
    carbon
    dubnium
    erbium
    fermium
    gallium
    hydrogen
    iron
    jod

jobs:
  Download:
    runs-on: ubuntu-latest
    steps:
    - name: Download
      run: |
        for version in $(seq ${{ env.FIRST_VERSION }} ${{ env.LATEST_VERSION }}); do
          base_url=$(curl -Ls -o /dev/null -w %{url_effective} "${{ env.BASE_URL }}/latest-v${version}.x")
          minor_version=$(basename "base_url")
          curl -O ${base_url}/node-v${minor_version}-win-x64.zip
        done
        ls -l node*

  Build:
    needs: Download
    strategy:
      fail-fast: false
      matrix:
        winver:
          - ltsc2025
          - ltsc2022
          - ltsc2019
          - 20H2
          - 2009
          - 2004
          - 1909
          - 1903
          - 1809
          - 1803
          - 1709
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: |
          $baseURL        = [System.Environment]::GetEnvironmentVariable("BASE_URL")
          $versionPattern = [System.Environment]::GetEnvironmentVariable("VERSION_PATTERN")
          $firstVersion   = [int][System.Environment]::GetEnvironmentVariable("FIRST_VERSION")
          $latestVersion  = [int][System.Environment]::GetEnvironmentVariable("LATEST_VERSION")

          $firstVersion..$latestVersion | ForEach-Object -Parallel {
            $response     = Invoke-WebRequest -Uri "${using:baseURL}/latest-v$_.x"
            $canonicalUrl = $response.BaseResponse.ResponseUri.AbsoluteUri
            echo $canonicalUrl
            $minorVersion = Split-Path -Path $canonicalUrl -Leaf

            $TAGS = "-t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }} -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion}-${{ matrix.winver }} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${minorVersion}-${{ matrix.winver }}"
            if (${{ strategy.job-index }} -eq 0) {
              $TAGS += " -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_} -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${minorVersion}"
              if ($_ -eq $using:latestVersion) {
                $TAGS += " -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:latest -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:latest"
              }
            }
            Invoke-WebRequest -Uri https://nodejs.org/dist/v${minorVersion}/node-v${minorVersion}-win-x64.zip -OutFile node-v${minorVersion}-win-x64.zip
            Expand-Archive -Path .\node-v${minorVersion}-win-x64.zip -DestinationPath .\node-v${minorVersion}-win-x64
            cmd /c "docker build --isolation=hyperv ${TAGS} --build-arg NODE_VER=${minorVersion} --build-arg CONT_VER=${{ matrix.winver }} ."
          }

      - name: Tag elements
        run: |
          $baseURL        = [System.Environment]::GetEnvironmentVariable("BASE_URL")
          $versionPattern = [System.Environment]::GetEnvironmentVariable("VERSION_PATTERN")
          
          [System.Environment]::GetEnvironmentVariable("NODE_VERSIONS_ELEMENTS") -split ' ' | ForEach-Object -Parallel {
            $response     = Invoke-WebRequest -Uri "${using:baseURL}/latest-v$_.x"
            $canonicalUrl = $response.BaseResponse.ResponseUri.AbsoluteUri
            $minorVersion = Split-Path -Path $canonicalUrl -Leaf
            try {
              cmd /c "docker image inspect ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion}-${{ matrix.winver }}" > $nul
              cmd /c "docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion}-${{ matrix.winver }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }}"
              cmd /c "docker tag ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${minorVersion}-${{ matrix.winver }} ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }}"
            } catch {
              cmd /c "docker build --isolation hyperv -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }} --build-arg NODE_VER=${minorVersion} ."
            }
            if (${{ strategy.job-index }} -eq 0) {
              cmd /c "docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}"
              cmd /c "docker tag ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-${{ matrix.winver }} ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}"
            }
            break
          }

      - name: Push
        run: |
          @("${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}", "ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}") | ForEach-Object -Parallel {
            cmd /c "docker push $_ --all-tags"
          }
