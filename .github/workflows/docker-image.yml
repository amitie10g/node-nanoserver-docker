name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  schedule: 
   - cron: '0 12 * * 0'

env:
  BASE_URL: "https://nodejs.org/dist"
  VERSION_PATTERN: "node-v(\\d+\\.\\d+\\.\\d+)"
  FIRST_VERSION: 4
  LATEST_VERSION: 22
  NODE_VERSIONS_ELEMENTS: >
    argon
    boron
    carbon
    dubnium
    erbium
    fermium
    gallium
    hydrogen
    iron

jobs:
  Build:
    strategy:
      matrix:
        winver: ["2022", "2019"]
    runs-on: windows-${{ matrix.winver }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: |
          $baseURL        = [System.Environment]::GetEnvironmentVariable("BASE_URL")
          $versionPattern = [System.Environment]::GetEnvironmentVariable("VERSION_PATTERN")
          $firstVersion   = [int][System.Environment]::GetEnvironmentVariable("FIRST_VERSION")
          $latestVersion  = [int][System.Environment]::GetEnvironmentVariable("LATEST_VERSION")

          $firstVersion..$latestVersion | ForEach-Object -Parallel {
            $htmlContent = Invoke-WebRequest -Uri "${using:baseURL}/latest-v$_.x"
            foreach ($link in $htmlContent.Links.href) {
              if ($link -match $using:versionPattern) {
                $minorVersion = $Matches[1]
                $TAGS = "-t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-ltsc${{ matrix.winver }} -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion}-ltsc${{ matrix.winver }} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-ltsc${{ matrix.winver }} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${minorVersion}-ltsc${{ matrix.winver }}"
                if (${{ strategy.job-index }} -eq 0) {
                  $TAGS += " -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_} -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${minorVersion}"
                  if ($_ -eq $using:latestVersion) {
                    $TAGS += " -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:latest -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:latest"
                  }
                }
                cmd /c "docker build ${TAGS} --build-arg NODE_VER=${minorVersion} --build-arg CONT_VER=ltsc${{ matrix.winver }} ."
                break
              }
            }
          }

      - name: Tag elements
        run: |
          $baseURL        = [System.Environment]::GetEnvironmentVariable("BASE_URL")
          $versionPattern = [System.Environment]::GetEnvironmentVariable("VERSION_PATTERN")
          [System.Environment]::GetEnvironmentVariable("NODE_VERSIONS_ELEMENTS") -split ' ' | ForEach-Object -Parallel {
            $htmlContent = Invoke-WebRequest -Uri "${using:baseURL}/latest-${_}"
            foreach ($link in $htmlContent.Links.href) {
              if ($link -match $using:versionPattern) {
                $versionNumber = $Matches[1]
                cmd /c "docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${versionNumber}-ltsc${{ matrix.winver }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-ltsc${{ matrix.winver }}"
                cmd /c "docker tag ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${versionNumber}-ltsc${{ matrix.winver }} ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-ltsc${{ matrix.winver }}"
                if (${{ strategy.job-index }} -eq 0) {
                  cmd /c "docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${versionNumber}-ltsc${{ matrix.winver }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}"
                  cmd /c "docker tag ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${versionNumber}-ltsc${{ matrix.winver }} ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}"
                }
                break
              }
            }
          }

      - name: Push
        run: |
          @("${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}", "ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}") | ForEach-Object -Parallel {
            cmd /c "docker push $_ --all-tags"
          }

  Build_Powershell:
    strategy:
      matrix:
        winver: ["2022"]
    runs-on: windows-${{ matrix.winver }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull dependencies
        run: docker pull mcr.microsoft.com/powershell:nanoserver-ltsc${{ matrix.winver }}
      - name: Build
        run: |
          $baseURL        = [System.Environment]::GetEnvironmentVariable("BASE_URL")
          $versionPattern = [System.Environment]::GetEnvironmentVariable("VERSION_PATTERN")
          $firstVersion   = [int][System.Environment]::GetEnvironmentVariable("FIRST_VERSION")
          $latestVersion  = [int][System.Environment]::GetEnvironmentVariable("LATEST_VERSION")

          $firstVersion..$latestVersion | ForEach-Object -Parallel {
            $htmlContent = Invoke-WebRequest -Uri "${using:baseURL}/latest-v$_.x"
            foreach ($link in $htmlContent.Links.href) {
              if ($link -match $using:versionPattern) {
                $minorVersion = $Matches[1]
                $TAGS = "-t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-pwsh-ltsc${{ matrix.winver }} -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion}-pwsh-ltsc${{ matrix.winver }} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-pwsh-ltsc${{ matrix.winver }} -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${minorVersion}-pwsh-ltsc${{ matrix.winver }}"
                if (${{ strategy.job-index }} -eq 0 -and $_ -eq $using:latestVersion) {
                  $TAGS = "-t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-pwsh -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${minorVersion}-pwsh -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-pwsh -t ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${minorVersion}-pwsh"
                }
                cmd /c "docker build ${TAGS} --build-arg NODE_VER=${minorVersion} --build-arg CONT_VER=nanoserver-ltsc${{ matrix.winver }} --build-arg BASE_IMG=powershell ."
                break
              }
            }
          }
      - name: Tag elements
        run: |
          $baseURL        = [System.Environment]::GetEnvironmentVariable("BASE_URL")
          $versionPattern = [System.Environment]::GetEnvironmentVariable("VERSION_PATTERN")
          [System.Environment]::GetEnvironmentVariable("NODE_VERSIONS_ELEMENTS") -split ' ' | ForEach-Object -Parallel {
            $htmlContent = Invoke-WebRequest -Uri "${using:baseURL}/latest-${_}"
            foreach ($link in $htmlContent.Links.href) {
              if ($link -match $using:versionPattern) {
                $versionNumber = $Matches[1]
                cmd /c "docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${versionNumber}-pwsh-ltsc${{ matrix.winver }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-pwsh-ltsc${{ matrix.winver }}"
                cmd /c "docker tag ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${versionNumber}-pwsh-ltsc${{ matrix.winver }} ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-pwsh-ltsc${{ matrix.winver }}"
                if (${{ strategy.job-index }} -eq 0) {
                  cmd /c "docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${versionNumber}-pwsh-ltsc${{ matrix.winver }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${_}-pwsh"
                  cmd /c "docker tag ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${versionNumber}-pwsh-ltsc${{ matrix.winver }} ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}:${_}-pwsh"
                }
                break
              }
            }
          }

      - name: Push
        run: |
          @("${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}", "ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}") | ForEach-Object -Parallel {
            cmd /c "docker push $_ --all-tags"
          }